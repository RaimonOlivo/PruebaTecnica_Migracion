// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PruebaTecnica.Model;

namespace PruebaTecnica.Migrations
{
    [DbContext(typeof(APIContext))]
    [Migration("20210128024357_AddeRelationships")]
    partial class AddeRelationships
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.2");

            modelBuilder.Entity("PruebaTecnica.Model.Estados", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("estado")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("Estados");

                    b.HasData(
                        new
                        {
                            id = 1,
                            estado = "Abiertas"
                        },
                        new
                        {
                            id = 2,
                            estado = "Aprobadas"
                        },
                        new
                        {
                            id = 3,
                            estado = "Canceladas"
                        });
                });

            modelBuilder.Entity("PruebaTecnica.Model.Personas", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Apellido")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Direccion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("FechaNacimiento")
                        .HasColumnType("datetime2");

                    b.Property<string>("Foto")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Pasaporte")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Sexo")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.ToTable("Personas");
                });

            modelBuilder.Entity("PruebaTecnica.Model.Solicitud", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int?>("Estadoid")
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<int?>("Personaid")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("Estadoid");

                    b.HasIndex("Personaid");

                    b.ToTable("Solicitud");
                });

            modelBuilder.Entity("PruebaTecnica.Model.Solicitud", b =>
                {
                    b.HasOne("PruebaTecnica.Model.Estados", "Estado")
                        .WithMany()
                        .HasForeignKey("Estadoid");

                    b.HasOne("PruebaTecnica.Model.Personas", "Persona")
                        .WithMany()
                        .HasForeignKey("Personaid");

                    b.Navigation("Estado");

                    b.Navigation("Persona");
                });
#pragma warning restore 612, 618
        }
    }
}
